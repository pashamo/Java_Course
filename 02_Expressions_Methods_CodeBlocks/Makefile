JR = java
JCC = javac
JFLAGS = -g

default: keywords.class statements.class codeBlocks.class methods.class codingExercise.class codingExercise1.class codingExercise2.class codingExercise3.class codingExercise4.class codingExercise5.class codingExercise6.class codingExercise7.class codingExercise8.class codingExercise9.class codingExercise10.class codingExercise11.class methodOverloading.class


keywords.class: keywords.java
	$(JCC) $(JFLAGS) keywords.java
	$(JR) keywords
statements.class: statements.java
	$(JCC) $(JFLAGS) statements.java
	$(JR) statements
codeBlocks.class: codeBlocks.java
	$(JCC) $(JFLAGS) codeBlocks.java
	$(JR) codeBlocks
methods.class: methods.java
	$(JCC) $(JFLAGS) methods.java
	$(JR) methods
codingExercise.class: codingExercise.java
	$(JCC) $(JFLAGS) codingExercise.java
	$(JR) codingExercise
codingExercise1.class: codingExercise1.java
	$(JCC) $(JFLAGS) codingExercise1.java
	$(JR) codingExercise1
codingExercise2.class: codingExercise2.java
	$(JCC) $(JFLAGS) codingExercise2.java
	$(JR) codingExercise2
codingExercise3.class: codingExercise3.java
	$(JCC) $(JFLAGS) codingExercise3.java
	$(JR) codingExercise3
codingExercise4.class: codingExercise4.java
	$(JCC) $(JFLAGS) codingExercise4.java
	$(JR) codingExercise4
codingExercise5.class: codingExercise5.java
	$(JCC) $(JFLAGS) codingExercise5.java
	$(JR) codingExercise5
codingExercise6.class: codingExercise6.java
	$(JCC) $(JFLAGS) codingExercise6.java
	$(JR) codingExercise6
codingExercise7.class: codingExercise7.java
	$(JCC) $(JFLAGS) codingExercise7.java
	$(JR) codingExercise7
codingExercise8.class: codingExercise8.java
	$(JCC) $(JFLAGS) codingExercise8.java
	$(JR) codingExercise8
codingExercise9.class: codingExercise9.java
	$(JCC) $(JFLAGS) codingExercise9.java
	$(JR) codingExercise9
codingExercise10.class: codingExercise10.java
	$(JCC) $(JFLAGS) codingExercise10.java
	$(JR) codingExercise10
codingExercise11.class: codingExercise11.java
	$(JCC) $(JFLAGS) codingExercise11.java
	$(JR) codingExercise11
methodOverloading.class: methodOverloading.java
	$(JCC) $(JFLAGS) methodOverloading.java
	$(JR) methodOverloading

clean:
	$(RM) *.class
